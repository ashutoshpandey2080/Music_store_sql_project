 Set 1 :-- 

/* Q1: Who is the senior most employee based on job title? */

SELECT employee_id,concat(first_name,'',last_name) as employees_name , tittle 
levels, city , country, email
FROM employee
ORDER BY levels DESC
LIMIT 1;


 Q2: Which countries have the most Invoices? 

SELECT COUNT(*) as counts , billing_country 
FROM invoice
GROUP BY billing_country
ORDER BY counts DESC;


 Q3: What are top 3 values of total invoice? 

SELECT invoice_id , total 
FROM invoice
ORDER BY total DESC
limit 3;


Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals .

SELECT SUM(total) AS invoice_totals , billing_city
FROM invoice
GROUP BY billing_city
ORDER BY invoice_totals DESC
LIMIT 1;


 Set 2 :--

 Q1: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. 


SELECT DISTINCT c.email,concat(first_name,'', last_name) as customer_name
FROM customer as c
JOIN invoice as i ON c.customer_id = i.customer_id
JOIN invoice_line as il ON i.invoice_id = il.invoice_id
WHERE track_id IN(
	SELECT track_id FROM track as t
	JOIN genre as g ON t.genre_id = g.genre_id
	WHERE genre.name LIKE 'Rock'
)
ORDER BY email;


 Q2: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. 

SELECT  a.name,COUNT(t.track_id) as tracks
FROM artist as a
JOIN album2 as al ON a.artist_id=al.artist-id
JOIN track as t ON al.album_id=t.album-id
JOIN genre as g ON t.genre_id =g.genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY a.name
ORDER BY tracks DESC
LIMIT 10;


 Q3: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. 

SELECT name,miliseconds
FROM track
WHERE miliseconds > (
	SELECT AVG(miliseconds) AS avg_length
	FROM track )
ORDER BY miliseconds DESC;


Set 3 :--

  Q1: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent .



WITH best_selling_artist AS (
	SELECT a.artist_id , a.name AS artist_name, SUM(il.unit_price*il.quantity) AS total_sales
	FROM invoice_line as il
	JOIN track as t ON t.track_id = il.track_id
	JOIN album2 as al ON al.album_id = t.album_id
	JOIN artist as a ON a.artist_id = al.artist_id
	GROUP BY 1,2
	ORDER BY 3 DESC
	LIMIT 1
)
SELECT c.customer_id,concat(c.first_name,'',c.last_name), bsa.artist_name, 
SUM(il.unit_price*il.quantity) AS amount_spent
FROM invoice as i
JOIN customer as c ON c.customer_id = i.customer_id
JOIN invoice_line as il ON il.invoice_id = i.invoice_id
JOIN track as t ON t.track_id = il.track_id
JOIN album2 as al ON al.album_id = t.album_id
JOIN best_selling_artist bsa ON bsa.artist_id = al.artist_id
GROUP BY 1,2,3,
ORDER BY 4 DESC;


 Q2: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. 
 

WITH popular_genre AS 
(
    SELECT COUNT(invoice_line.quantity) AS purchases, customer.country, genre.name, genre.genre_id, 
	ROW_NUMBER() OVER(PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo 
    FROM invoice_line 
	JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
	JOIN customer ON customer.customer_id = invoice.customer_id
	JOIN track ON track.track_id = invoice_line.track_id
	JOIN genre ON genre.genre_id = track.genre_id
	GROUP BY 2,3,4
	ORDER BY 2 ASC, 1 DESC
)
SELECT * FROM popular_genre WHERE RowNo <= 1



Thank You :) 
